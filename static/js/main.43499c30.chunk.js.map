{"version":3,"sources":["components/Input.ts","components/Button.ts","components/InputButton.tsx","components/Ul.ts","components/Li.ts","components/UnorderedList.tsx","components/RootWrapper.ts","actions/index.ts","actions/actionTypes.ts","selectors/index.ts","global-styles.ts","containers/App.tsx","reducers/index.ts","store/index.ts","index.tsx"],"names":["Input","styled","_templateObject","Button","Button_templateObject","Wrapper","InputButton_templateObject","InputButton","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","input","onAdd","current","item","key","value","label","onClick","focus","handleKeyPress","event","React","createRef","react_default","a","createElement","components_Input","ref","onKeyPress","components_Button","Component","Ul","Ul_templateObject","Li","Li_templateObject","_ref","highlight","shouldHighlightItem","index","UnorderedList","components_Ul","items","map","components_Li","RootWrapper","RootWrapper_templateObject","addListItem","type","selectItems","createSelector","state","app","GlobalStyles","createGlobalStyle","global_styles_templateObject","connect","dispatch","bindActionCreators","components_RootWrapper","components_InputButton","components_UnorderedList","global_styles","initialState","reducer","arguments","length","undefined","action","objectSpread","concat","toConsumableArray","reducers","combineReducers","appReducer","store","createStore","applyMiddleware","logger","configureStore","ReactDOM","render","es","containers_App","document","getElementById"],"mappings":"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","file":"static/js/main.43499c30.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst Input = styled('input')`\n  width: 50%;\n  height: 60px;\n  border: 1px solid dimgray;\n  border-radius: 5px;\n  font-size: 32px;\n  padding-left: 15px;\n  margin-right: 15px;\n`;\n\nexport default Input;\n","import styled from 'styled-components';\n\nconst Button = styled('button')`\n  font-size: 24px;\n  min-width: 100px;\n  height: 50px;\n  border: none;\n  background-color: dimgray;\n  color: white;\n  border-radius: 5px;\n`;\n\nexport default Button;\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport Input from './Input';\nimport Button from './Button';\n\nconst Wrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin: 20px;\n`;\n\ninterface IProps {\n  onClick: (event: any) => void;\n};\n\nclass InputButton extends Component<IProps> {\n  private input: any;\n\n  constructor(props: IProps) {\n    super(props);\n    this.input = React.createRef<HTMLInputElement>();\n  }\n\n  onAdd = () => {\n    const input = this.input.current;\n    const item = {\n      key: input.value,\n      label: input.value,\n    };\n    \n    this.props.onClick(item);\n\n    // empty input again.\n    input.value = \"\";\n\n    // focus on the input element.\n    input.focus();\n  }\n\n  handleKeyPress = (event: any) => {\n    if (event.key === 'Enter') {\n      this.onAdd();\n    }\n  }\n\n  render() {\n    return (\n      <Wrapper>\n        <Input ref={this.input} onKeyPress={this.handleKeyPress} />\n        <Button onClick={this.onAdd}>Add</Button>\n      </Wrapper>\n    )\n  }\n}\n\nexport default InputButton;\n","import styled from 'styled-components';\n\nconst Ul = styled('ul')`\n  padding: 0px;\n  margin: 0px;\n`;\n\nexport default Ul;\n","import styled from 'styled-components';\n\nconst Li = styled('li')<{ highlight: boolean }>`\n  display: block;\n  font-size: 24px;\n  background-color: ${({ highlight }) => highlight ? 'blanchedalmond' : 'cornflowerblue'};\n  padding: 10px;\n  border-radius: 5px;\n  margin: 5px 20px;\n`;\n\nexport default Li;\n","import React from 'react';\n\nimport Ul from './Ul';\nimport Li from './Li';\nimport { IItem } from '../types';\n\ninterface IProps {\n  items: IItem[];\n};\n\nconst shouldHighlightItem = (index: number) => {\n  const number = index + 1;\n  return number % 3 === 0;\n};\n\nconst UnorderedList = (props: IProps) => (\n  <Ul>\n    {props.items.map((item, index) => (\n      <Li key={item.key} highlight={shouldHighlightItem(index)}>\n        {item.label}\n      </Li>\n    ))}\n  </Ul>\n);\n\nexport default UnorderedList;\n","import styled from 'styled-components';\n\nconst RootWrapper = styled('div')`\n  height: 100%;\n  width: 100%;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default RootWrapper;\n","import { ADD_LIST_ITEM } from \"./actionTypes\";\nimport { IItem } from '../types';\n\nexport const addListItem = (item: IItem) => ({\n  type: ADD_LIST_ITEM,\n  item,\n});\n","\n// action type for adding new item in the list.\nexport const ADD_LIST_ITEM = 'App/ADD_LIST_ITEM';\n","import { createSelector } from 'reselect'\nimport { IApplicationRootState } from '../types';\n\nexport const selectApp = (state: IApplicationRootState) => state.app\n\nexport const selectItems = createSelector(\n  selectApp,\n  app => app.items,\n);\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  html,\n  body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n\n  #root {\n    min-height: 100%;\n    min-width: 100%;\n  }\n`;\n\nexport default GlobalStyles;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dispatch, bindActionCreators } from 'redux';\n\nimport InputButton from '../components/InputButton';\nimport UnorderedList from '../components/UnorderedList';\nimport RootWrapper from '../components/RootWrapper';\nimport { addListItem } from '../actions';\nimport { selectItems } from '../selectors';\nimport GlobalStyles from '../global-styles';\nimport { IApplicationRootState, IItem } from '../types';\n\ninterface IProps {\n  items: IItem[];\n  addListItem: (item: IItem) => void;\n};\n\nconst App = (props: IProps) => (\n  <RootWrapper>\n    <InputButton onClick={props.addListItem} />\n    <UnorderedList items={props.items} />\n    <GlobalStyles />\n  </RootWrapper>\n);\n\nconst mapStateToProps = (state: IApplicationRootState) => ({\n  items: selectItems(state),\n});\n\nconst mapDispatchToProps = (dispatch: Dispatch) => bindActionCreators({\n  addListItem,\n}, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(App);\n","import { AnyAction } from \"redux\";\nimport { ADD_LIST_ITEM } from \"../actions/actionTypes\";\nimport { IAppReducerState } from '../types';\n\nexport const initialState: IAppReducerState = {\n  items: []\n};\n\nconst reducer = (state = initialState, action: AnyAction) => {\n  switch(action.type) {\n    case ADD_LIST_ITEM:\n      return {\n        ...state,\n        items: [\n          ...state.items,\n          action.item,\n        ],\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport logger from 'redux-logger';\nimport appReducer from '../reducers';\n\nexport const reducers = combineReducers({\n  app: appReducer,\n});\n\nconst configureStore = () => {\n  const store = createStore(reducers, applyMiddleware(logger));\n  return store;\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './containers/App';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}